apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: distroless-aws-identity
  name: distroless-aws-identity
  labels:
    app: distroless-aws-identity
    type: workshop
    priority: meh
    scope: core
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: distroless-aws-identity
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: distroless-aws-identity
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - distroless-aws-identity
              topologyKey: kubernetes.io/hostname
      containers:
        - name: distroless-aws-identity
          image: distroless-aws-identity:0.0.1
          imagePullPolicy: Never
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: distroless-aws-identity
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: distroless-aws-identity
                  key: secret_access_key
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              memory: 256Mi
          ports:
            - name: service
              containerPort: 8080
            - name: manage
              containerPort: 8081
          readinessProbe:
            httpGet:
              path: /manage/health
              port: manage
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /manage/health
              port: manage
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10

